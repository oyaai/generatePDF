import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.jetbrains.kotlin.jvm' version '1.8.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.8.22'
	id "org.jetbrains.kotlin.kapt" version "1.9.0"
	id 'application'
}

group = 'com.crm'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8
applicationDefaultJvmArgs = ["-Dlog4j.configuration=file:.//conf/GenPDF//log4j-config.xml",
                             "-Dserver.port=8082",
                             "-Dspring.config.location=file:conf/spring_config.yml"
                            ]
compileJava.options.encoding = 'UTF-8'



java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

configurations {
//    compile.exclude module: "spring-boot-starter-tomcat"
    compile.exclude module: "spring-boot-starter-logging"
}

kapt {
    useBuildCache = true
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.security:spring-security-config:5.0.0.RELEASE'

	implementation 'org.codehaus.jackson:jackson-core-asl:1.9.2'
    implementation 'org.codehaus.jackson:jackson-mapper-asl:1.9.2'
    implementation 'com.itextpdf:itextpdf:5.5.2'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.47'
    implementation 'commons-io:commons-io:2.4'
    implementation 'commons-cli:commons-cli:1.3.1'
    implementation 'commons-lang:commons-lang:2.6'

    implementation 'org.slf4j:jcl-over-slf4j:1.7.36'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.slf4j:slf4j-log4j12:1.7.36'
    implementation 'org.apache.logging.log4j:log4j:2.17.2'

    implementation 'org.apache.pdfbox:pdfbox:2.0.9'
	implementation "io.micrometer:micrometer-core:1.1.4"
    implementation "io.micrometer:micrometer-spring-legacy:1.1.4"
    implementation "io.micrometer:micrometer-registry-prometheus:1.1.4"

}

tasks.getByName "jar", {
    manifest {
        attributes 'Implementation-Title': 'generatePDF',
                   'Implementation-Version': version
    }
}

def buildTime() {
    def df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss")
    return df.format(new Date())
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '17'
	}
}

task bundleWithDependencies(type: Copy) {
    dependsOn build
    //from configurations.runtimeonly
    from jar
    into "${project.projectDir}/build/output"
}


//tasks.named() {
	//useJUnitPlatform()
//}
